name: CI/CD Pipeline 

# Triggers the workflow on push or pull request for the main branch
on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main

# Define jobs
jobs:
  build:
    runs-on: ubuntu-latest

    continue-on-error: true  # Continue even if the build fails

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Create build artifacts (if any)
      - name: Build application
        run: npm run build # Change if you have a specific build step (e.g., bundling)

  # Deploy job
  deploy:
    runs-on: ubuntu-latest

    # No longer dependent on build success
    steps:
      # Checkout the code again (it's isolated between jobs)
      - name: Checkout Code
        uses: actions/checkout@v2

      # Setup Node.js again
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      # Install dependencies for deployment
      - name: Install dependencies
        run: npm install

      # Deploy to Azure App Service
      - name: Deploy to Azure Web App
        uses: Azure/webapps-deploy@v2
        with:
          app-name: HMS         
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: .                        

      # Tag and push the release to GitHub
      - name: Create Git Tag
        id: tag_version
        run: |
          VERSION=$(date +"%Y%m%d%H%M%S")
          echo "New version is $VERSION"
          git tag "v$VERSION"
          git push origin "v$VERSION"
